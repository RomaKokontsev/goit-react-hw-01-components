{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistic.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Wrapper/Wrapper.module.css","components/Wrapper/Wrapper.js","components/Profile/default-user.png","components/Profile/Profile.js","components/Statistics/Statistic.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Wrapper","children","className","styles","wrapper","User","avatar","defaultImg","name","tag","location","stats","profile","description","src","alt","width","label","quantity","followers","views","likes","Statistic","title","statistics","statList","map","id","percentage","item","style","backgroundColor","Math","floor","random","FriendListItem","isOnline","status","color","FriendList","friends","friendList","TransactionHistory","items","transaction","transactionHistory","type","amount","currency","App","Profile","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a935c3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3UUvX\",\"description\":\"Profile_description__10UyK\",\"avatar\":\"Profile_avatar__2_3kV\",\"name\":\"Profile_name__1igF8\",\"tag\":\"Profile_tag__rjmZQ\",\"location\":\"Profile_location__1z3un\",\"stats\":\"Profile_stats__3hIkt\",\"label\":\"Profile_label__2JDQM\",\"quantity\":\"Profile_quantity__3_YGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendList_friends__32C1A\",\"friendList\":\"FriendList_friendList__1Jtpu\",\"item\":\"FriendList_item__23ip0\",\"avatar\":\"FriendList_avatar__2hZId\",\"status\":\"FriendList_status__bpLGP\",\"name\":\"FriendList_name__oaiQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__2rT6j\",\"title\":\"Statistic_title__ScNXD\",\"statList\":\"Statistic_statList__KwGVe\",\"item\":\"Statistic_item__3dl4i\",\"label\":\"Statistic_label__3qcQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__2dhaY\",\"transactionHistory\":\"TransactionHistory_transactionHistory__2ulee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__aEvSi\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Wrapper.module.css\";\n\nconst Wrapper = ({ children }) => {\n  return <div className={styles.wrapper}>{children}</div>;\n};\n\nWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Wrapper;\n","export default __webpack_public_path__ + \"static/media/default-user.a1158b93.png\";","import PropTypes from \"prop-types\";\nimport styles from \"./Profile.module.css\";\nimport defaultImg from \"./default-user.png\";\n\nconst User = ({ avatar = defaultImg, name, tag, location, stats }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img\n          src={avatar}\n          alt=\"Аватар пользователя\"\n          className={styles.avatar}\n          width=\"150\"\n        />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number.isRequired),\n};\n\nexport default User;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Statistic.module.css\";\n\nconst Statistic = ({ title = \"\", stats }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            key={id}\n            className={styles.item}\n            style={{ backgroundColor: `${randomBgColor()}` }}\n          >\n            <span className={styles.label}>{label}</span>\n            <span className={styles.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nfunction randomBgColor() {\n  return `rgb(${Math.floor(Math.random() * (255 - 0) + 0)},\n    ${Math.floor(Math.random() * (255 - 0) + 0)},\n   ${Math.floor(Math.random() * (255 - 0) + 0)})`;\n}\n\nStatistic.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistic;\n","import PropTypes from \"prop-types\";\nimport styles from \"./FriendList.module.css\";\nimport { RiEmotionLine, RiEyeOffLine } from \"react-icons/ri\";\nimport defaultImg from \"../Profile/default-user.png\";\n\nconst FriendListItem = ({ avatar = defaultImg, name, isOnline }) => {\n  return (\n    <li className={styles.item}>\n      <span className={styles.status}>\n        {isOnline ? (\n          <RiEmotionLine color=\"green\" />\n        ) : (\n          <RiEyeOffLine color=\"red\" />\n        )}\n      </span>\n      <img className={styles.avatar} src={avatar} alt={name} width=\"60\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from \"prop-types\";\nimport styles from \"./FriendList.module.css\";\nimport FriendListItem from \"./FriendListItem\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <>\n      <h2 className={styles.friends}>Friends</h2>\n      <ul className={styles.friendList}>\n        {friends.map(({ avatar, name, isOnline, id }) => (\n          <FriendListItem\n            key={id}\n            avatar={avatar}\n            name={name}\n            isOnline={isOnline}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      avatar: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from \"prop-types\";\nimport styles from \"./TransactionHistory.module.css\";\nimport { Fragment } from \"react\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <Fragment>\n      <h2 className={styles.transaction}>Transactions</h2>\n      <table className={styles.transactionHistory}>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(({ type, amount, currency, id }) => (\n            <tr key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","import \"./App.css\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Profile from \"./components/Profile/Profile\";\nimport user from \"./components/Profile/user.json\";\nimport Statistics from \"./components/Statistics/Statistic\";\nimport statisticalData from \"./components/Statistics/statistical-data.json\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport friends from \"./components/FriendList/friends.json\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}